/* flexbox playground */
* {
	box-sizing: border-box;
}

html {
	height: 100%;
	background-color: #282828;
	display: flex;
	flex-direction: column;
	justify-content: center;
}

h2 {
	color: #cea840;
	font-size: 60px;
	text-align: center;
	display: flex;
	justify-content: center;
}

span.b {
	color: #5a96b9;
}

span.g {
	color: #99bd7f;
}

p {
	font-size: 20px;
	text-align: center;
	font-weight: 500;
	text-shadow: #282828;
}

.flexbox-container {
	display: flex;
	justify-content: center;
	align-items: stretch;
	align-content: stretch;
	background-color: #cea840;
}

.flexbox-item {
	width: 100px;
	border: 3px solid #333;
	background-color: #99bd7f;
	margin: 5px;
}

.flexbox-item-1 {
	width: 100px;
	order: 1;
	flex-grow: 1;
	flex-shrink: 2;
	flex-basis: 1;
	min-height: 100px;
}

.flexbox-item-2 {
	width: 100px;
	order: 2;
	flex-grow: 1;
	flex-shrink: 2;
	flex-basis: 1;
	min-height: 100px;
}

.flexbox-item-3 {
	width: 100px;
	order: 1;
	flex-grow: 1;
	flex-shrink: 1;
	flex-basis: 0;
	min-height: 100px;
	background-color: #5a96b9;
}

.flexbox-item-4 {
	width: 100px;
	order: 2;
	flex-grow: 2;
	flex-shrink: 0;
	flex-basis: 1;
	min-height: 100px;
}

.flexbox-item-5 {
	width: 100px;
	order: 3;
	flex-grow: 1;
	flex-shrink: 1;
	flex-basis: 0;
	min-height: 100px;
	background-color: #5a96b9;
}

/* 
Flex container properties
.container {
	display: flex;  Enables flexbox layout 
	flex-direction: row | row-reverse | column | column-reverse;  Main axis runs horizontally or vertically 
	flex-wrap: nowrap | wrap | wrap-reverse;  Don't allow wrapping to new lines, wrap to new lines, or wrap to new lines in reverse 
	justify-content: flex-start | flex-end | center | space-between |
		space-around | space-evenly;  Align items along the main axis 
	align-items: stretch | flex-start | flex-end | center | baseline;  Align items along the cross axis 
	align-content: stretch | flex-start | flex-end | center | space-between |
		space-around;  Align rows/columns along the cross axis 
    gap: <length>;  Sets the gap between flex items 
	row-gap: <length>;  Sets the gap between rows of flex items 
	column-gap: <length>;  Sets the gap between columns of flex items 
	justify-items: auto | flex-start | flex-end | center | stretch;  Align items along both the main and cross axes 
	justify-self: auto | flex-start | flex-end | center | baseline | stretch;  Override the container's justify-content property for a single item 
	place-content: <align-content> || <justify-content>;  Align items along both the main and cross axes using shorthand 
	place-items: <align-items> || <justify-items>;  Align items along both the main and cross axes using shorthand 
}

Flex item properties 
.flexbox-item-1 {
	order: <integer>;  Change the order of the item 
	flex-grow: <number>;  Allow item to grow beyond its default size 
	flex-shrink: <number>;  Allow item to shrink beyond its default size 
	flex-basis: <length> | auto;  Set the default size of the item 
	flex: none | [ < "flex-grow" > < "flex-shrink" >? || < "flex-basis" > ];  Shorthand for flex-grow, flex-shrink, and flex-basis 
	align-self: auto | flex-start | flex-end | center | baseline | stretch;  Override the container's align-items property for a single item 
    flex-flow: <flex-direction> || <flex-wrap>;  Shorthand for flex-direction and flex-wrap 
	align-content: <align-content>;  Align rows/columns along the cross axis 
	justify-items: auto | flex-start | flex-end | center | stretch;  Align items along both the main and cross axes 
	justify-self: auto | flex-start | flex-end | center | baseline | stretch;  Override the container's justify-content property for a single item 
	place-self: <align-self> || <justify-self>;  Align a single item along both the main and cross axes using shorthand 
}   */
